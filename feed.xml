<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://ccolombe12.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ccolombe12.github.io/" rel="alternate" type="text/html" hreflang="en" /><updated>2023-04-11T22:05:42+00:00</updated><id>https://ccolombe12.github.io/feed.xml</id><title type="html">blank</title><subtitle>The academic wepage of Connor Colombe
</subtitle><entry><title type="html">Optimal Weights</title><link href="https://ccolombe12.github.io/blog/2023/Grain_farmer/" rel="alternate" type="text/html" title="Optimal Weights" /><published>2023-04-11T00:00:01+00:00</published><updated>2023-04-11T00:00:01+00:00</updated><id>https://ccolombe12.github.io/blog/2023/Grain_farmer</id><content type="html" xml:base="https://ccolombe12.github.io/blog/2023/Grain_farmer/"><![CDATA[<h2 id="problem-statement">Problem Statement</h2>
<p>A farmer, who sells grain, has a set of four weights that each weigh an integer number of pounds and a fair balance. She claims that she can weigh any integer number of pounds of grain up to a maximum of \(N\) using just these weights. What is the maximum value of \(N\) and what should the weights be? <em>Challenge: Given \(n\) weights what is the maximum value of \(N(n)\) and what should the weights be?</em></p>
<hr />

<h2 id="solution">Solution</h2>

<p>Let us consider the generalized case and then use it to answer the question for when \(n = 4\). Given \(n\) weights, we would like to pick the value of their individual weights \(w_1,w_2,\ldots, w_n\) such that using the balance we can weigh items of weights \(1,2, \ldots, N(n)\) such that \(N(n)\) is maximized. In this problem we will say that you can <em>weigh</em> an item of weight \(x\) if by placing some our weights on the left side of the balance and potentially some weights on the right side of the balance, the two sides have an absolute weight difference of exactly \(x\). So, how can can we go about determining what the values should be?</p>

<p>First off, we can place an upper bound on what \(N(n)\) by counting the number of distinct weight configurations on the balance. For a given weight, it can be either: on the left side of the balance, on the right side of the balance, or not on the balance. Since this is true for any of our \(n\) weights, there are \(3^n\) configurations of our weights on the balance. How many of these produce a unique weight difference? By symmetry, if we swap the  weights on either side, we produce the same net weight difference so we have over-counted by a factor of 2. The only case where this symmetry argument does not apply is when there are no weights on either side. By this logic, if each weight configuration produces a unique weight difference, then we have shown the upper bound \(\begin{equation}
  N(n) \leq \frac{3^n - 1}{2}.
\end{equation}\)</p>

<p>Great! Now what should our weights be? Suppose we have found that with \(n\) weights we can measure weights up to \(N(n)\). This maximum value must be achieved when all weights are on one side of the balance. Now suppose we can add an additional weight \(w_{n+1}\) to our set. What should it be to maximize our new weighing potential? Well given our current weights, we can’t weigh \(N(n) + 1\) so our new weight ought to allow us to measure this. One such weight that satisfies this can be found</p>

<p>\(\begin{equation}
  w_{n+1} - N(n) = N(n) + 1 \implies w_{n+1} = 2 N(n) + 1.
\end{equation}\)
Using this new weight and the previous weight set, we can achieve all integral weights up to \(N(n) + w_{n+1} = 3 N(n) + 1.\) If we adopt this strategy of choosing the next weight to add to our set, starting at zero weights, we get the recurrence relation \(\begin{align}
  N(n + 1) &amp; = 3 N(n) + 1\\ 
  N(0) &amp; = 0
\end{align}\)</p>

<p>which can we solved to find \(\boxed{N(n) = \frac{3^n - 1}{2}}\), the theoretical upper-bound! It then follows that \(w_{n} =  3^{n-1}\). That is, if we have \(n\) weights the optimal assignment of their weight values are the first \(n\) powers of \(3\) starting at \(0\). Based on this, the solution to our original problem is \(\boxed{N(4) = 40}\) and using weights \(\boxed{\{1,3,9,27\}}\). 
Our colleague Brent Austgen cleverly pointed out that your can actually <strong>Double</strong> the value of \(N(n)\) if you double the values of all the weights. Using this strategy, only even numbers are achievable but to measure an odd number you simply determine which two adjacent even numbers the weight falls between! This strategy allows us to reach up to \(3^n - 1\) with \(n\) weights!</p>]]></content><author><name>Connor Colombe</name></author><category term="math" /><summary type="html"><![CDATA[A fun problem about a grain farmer and their balance.]]></summary></entry><entry><title type="html">The Amoeba Problem</title><link href="https://ccolombe12.github.io/blog/2023/Amoeba/" rel="alternate" type="text/html" title="The Amoeba Problem" /><published>2023-04-09T00:00:01+00:00</published><updated>2023-04-09T00:00:01+00:00</updated><id>https://ccolombe12.github.io/blog/2023/Amoeba</id><content type="html" xml:base="https://ccolombe12.github.io/blog/2023/Amoeba/"><![CDATA[<h2 id="problem-statement">Problem Statement</h2>
<p>You start off with one amoeba. Every minute, this amoeba can either:</p>
<ul>
  <li>Do nothing</li>
  <li>Die</li>
  <li>Split into two amoebas</li>
  <li>Split into three amoebas</li>
</ul>

<p>Each of these actions has an equal probability of occurring. All further amoebas behave the
exact same way. What is the probability that the amoebas eventually die off?</p>

<p><em>Challenge: Suppose now the amoeba has the ability to split into up to</em> \(n\) <em>amoebas. For large</em> \(n\)<em>, what is probability that the amoebas eventually die off now?</em></p>
<hr />

<h2 id="solution">Solution</h2>

<p>Let \(p\) be the probability that an amoeba and all of its decedents eventually die out. We can then calculate this probability by conditioning on each of the actions the amoeba could take</p>

\[\begin{align}
p = \frac{1}{4} +\frac{1}{4} p+ \frac{1}{4} p^2 + \frac{1}{4} p^3. \label{eq:n4}
\end{align}\]

<p>Each term on the right hand side representing the events that the amoeba dies, does nothing, splits in two, and splits in three respectively. Since the any two amoeba’s behave independently of one another, if there are \(k\) amoebas, the probability that all \(k\) and their respective descendants dies out is \(p^k\). Solving for \(p\) in (\ref{eq:n4}), yields two solutions in \([0,1]\). Namely, \(p = 1\) and \(p = \sqrt{2} - 1\). But which of the two is the solution?</p>

<p>We can show that that \(p = \sqrt{2} - 1\) is indeed the true probability by instead considering the probability that a given amoeba and its ancestors die out in at most \(k\) minutes minutes, denoted \(P_k\), is bounded above by \(\sqrt{2} - 1\) and is eq.</p>

<p>We can prove this by induction. Clearly \(P_1 = \frac{1}{4}\) since there is only one way for the a given amoeba to last one minute and \(\frac{1}{4} &lt; \sqrt{2} - 1\). Assume this holds for \(k\). What is the probability a given amoeba and its ancestors die out in at most \(k + 1\) minutes? Well from (\ref{eq:n4}) we have 
\(\begin{align*}
P_{k+1} &amp; = \frac{1}{4} +\frac{1}{4} P_{k}+ \frac{1}{4} P_{k}^2 + \frac{1}{4} P_{k}^3 \\ 
&amp; = \frac{1}{4}\left( 1 + P_k + P_k^2 + P_k^3\right) &amp;&amp; (\text{Plug in } P_k &lt; \sqrt{2} - 1) \\ 
&amp; &lt; \sqrt{2} - 1
\end{align*}\)</p>

<p>completing our inductive step. Thus as \(k \to \infty\) our probability of extinction \(P_\infty = p\) can never get to 1. Implying the only possible solution is \(\boxed{ p = \sqrt{2} - 1}\).</p>

<p>If we consider the case where now the amoeba now has the options to split into as many as \(n\) amoebas, can we get an estimate of \(p\)? It turns out we can!</p>

<p>Consider the generalized form of (\ref{eq:n4})</p>

\[\begin{align}
p &amp; = \frac{1}{n+1}\sum_{k=0}^n p^k\\ 
 &amp; =\frac{1}{n+1}\left(\frac{1-p^{n+1}}{1 - p}\right)\\ 
 \implies &amp; \\ 
 p (n+1) &amp; = \frac{1-p^{n+1}}{1 - p} \label{eq:gen}.
\end{align}\]

<p>Note that for large \(n\), the value of  \(p = \frac{1}{n+1}\) begins to approximate the solution to (\ref{eq:gen}). We plotted the numerical solution to (\ref{eq:gen}) as function of \(n\) (labeled \(F[n]\) in the figure) and the function \(g(n) = 1/n\) and from the figure below we can see they begin to agree very quickly!</p>

<h3><figure><center>
  <img width="300" src="/assets/img/blog_images/2023-04-09-Amoeba/Amoeba_sim.png" class="img-fluid rounded z-depth-1" zoomable="true" />
</center></figure></h3>
<div class="caption">
    Using Mathematica to test our conjecture. The numerical solutions converge very quickly to the predicted value.
</div>]]></content><author><name>Connor Colombe</name></author><category term="math" /><summary type="html"><![CDATA[First post! Solution to a classic interview problem]]></summary></entry></feed>